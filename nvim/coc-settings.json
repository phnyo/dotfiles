{
  "languageserver": {
    "bash": {
    "command": "bash-language-server",
    "args": ["start"],
    "filetypes": ["sh"]
    },
    "clangd": {
      "command": "clangd",
      "rootPatterns": ["compile_flags.txt", "compile_commands.json"],
      "filetypes": ["c", "cc", "cpp", "c++", "objc", "objcpp"]
    },
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    },
    "fortran": {
      "command": "fortls",
      "filetypes": ["fortran"],
      "rootPatterns": [".fortls", ".git/"]
    },
    "golang": {
      "command": "gopls",
      "rootPatterns": ["go.mod"],
      "filetypes": ["go"]
    },
    "haskell": {
      "command": "haskell-language-server-wrapper",
      "args": ["--lsp"],
      "rootPatterns": ["*.cabal", "stack.yaml", "cabal.project", "package.yaml", "hie.yaml"],
      "filetypes": ["haskell", "lhaskell"],
      "settings": {
        "haskell": {
          "checkParents": "CheckOnSave",
          "checkProject": true,
          "maxCompletions": 40,
          "formattingProvider": "ormolu",
          "plugin": {
            "stan": { "globalOn": true }
          }
        }
      }
    },
    "rust": {
      "command": "rust-analyzer",
      "filetypes": ["rust"],
      "rootPatterns": ["Cargo.toml"]
    }
  },
  "diagnostic-languageserver.filetypes": {
    "python": "pylint"
  },
  "diagnostic-languageserver.linters": {
    "pylint": {
      "sourceName": "pylint",
      "command": "pylint",
      "debounce": 100,
      "args": [
        "--output-format",
        "text",
        "--score",
        "no",
        "--msg-template",
        "'{line}:{column}:{category}:{msg} ({msg_id}:{symbol})'",
        "%file"
      ],
      "formatPattern": [
        "^(\\d+?):(\\d+?):([a-z]+?):(.*)$",
        {
          "line": 1,
          "column": 2,
          "endColumn": 2,
          "security": 3,
          "message": 4
        }
      ],
      "rootPatterns": ["pyproject.toml", "setup.py", ".git"],
      "securities": {
        "informational": "hint",
        "refactor": "info",
        "convention": "info",
        "warning": "warning",
        "error": "error",
        "fatal": "error"
      },
      "offsetColumn": 1,
      "offsetColumnEnd": 1,
      "formatLines": 1
    }
  },
  "coc.preferences.formatOnSave": true
}
